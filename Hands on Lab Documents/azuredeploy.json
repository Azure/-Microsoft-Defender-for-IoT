{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.5.6.12127",
      "templateHash": "7996432184875687161"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "deployPublicIP": {
      "type": "bool",
      "defaultValue": true
    },
    "sourceVHDURL": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "copyvhd",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sourceVHDURL": {
            "value": "[parameters('sourceVHDURL')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.5.6.12127",
              "templateHash": "14306015180356350108"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "baseTime": {
              "type": "string",
              "defaultValue": "[utcNow('u')]"
            },
            "sourceVHDURL": {
              "type": "string"
            }
          },
          "variables": {
            "customExpiry": "[dateTimeAdd(parameters('baseTime'), 'PT1H')]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-08-01",
              "name": "[format('custom{0}', uniqueString(resourceGroup().id))]",
              "location": "[parameters('location')]",
              "properties": {
                "accessTier": "Cool",
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true
              },
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', format('custom{0}', uniqueString(resourceGroup().id)), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": false
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('custom{0}', uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}/{2}', format('custom{0}', uniqueString(resourceGroup().id)), 'default', 'vhds')]",
              "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('custom{0}', uniqueString(resourceGroup().id)), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}/{2}', format('custom{0}', uniqueString(resourceGroup().id)), 'default', 'scripts')]",
              "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('custom{0}', uniqueString(resourceGroup().id)), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "copyvhd",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.28.0",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H",
                "environmentVariables": [
                  {
                    "name": "sourceURL",
                    "secureValue": "[parameters('sourceVHDURL')]"
                  },
                  {
                    "name": "targetVHDURL",
                    "secureValue": "[format('{0}vhds/testvm.vhd?{1}', reference(resourceId('Microsoft.Storage/storageAccounts', format('custom{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob, listServiceSAS(format('custom{0}', uniqueString(resourceGroup().id)), '2021-08-01', createObject('canonicalizedResource', format('/blob/{0}/vhds', format('custom{0}', uniqueString(resourceGroup().id))), 'signedResource', 'c', 'signedProtocol', 'https', 'signedPermission', 'rwl', 'signedServices', 'b', 'signedExpiry', variables('customExpiry'))).serviceSasToken)]"
                  },
                  {
                    "name": "targetscriptURL",
                    "secureValue": "[format('{0}scripts/post-deploy.sh?{1}', reference(resourceId('Microsoft.Storage/storageAccounts', format('custom{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob, listServiceSAS(format('custom{0}', uniqueString(resourceGroup().id)), '2021-08-01', createObject('canonicalizedResource', format('/blob/{0}/scripts', format('custom{0}', uniqueString(resourceGroup().id))), 'signedResource', 'c', 'signedProtocol', 'https', 'signedPermission', 'rwl', 'signedServices', 'b', 'signedExpiry', variables('customExpiry'))).serviceSasToken)]"
                  }
                ],
                "scriptContent": "      echo \"Create script for customscript extension...\"\r\n      mkdir /var/log/scripts\r\n      touch /var/log/scripts/post-deploy.sh\r\n      echo '#!/bin/bash' > /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(MONITOR_INTERFACES=\\)\\(.*\\)/\\1\\\"local_listener\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(MGMT_INTERFACE=\\)\\(.*\\)/\\1\\\"eth0\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'ipaddr=$(ip addr show eth0 | grep \"inet\\b\" | awk '\"'\"'{print $2}'\"'\"' | cut -d/ -f1)' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(MGMT_IP_ADDRESS=\\)\\(.*\\)/\\1\\\"$ipaddr\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(ERSPAN_INTERFACES=\\)\\(.*\\)/\\1\\\"\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'netmask=$(ifconfig eth0 | awk '\"'\"'/netmask/{split($4,a,\":\"); print a[1]}'\"'\"')' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(MGMT_SUBNET=\\)\\(.*\\)/\\1\\\"$netmask\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'gateway=$(route -n | awk '\"'\"'{print $2}'\"'\"' | head -3 | tail -1)' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(MGMT_GATEWAY=\\)\\(.*\\)/\\1\\\"$gateway\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'dnsip=$(systemd-resolve --status | grep -i \"DNS Servers\" | awk '\"'\"'{print $3}'\"'\"')' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(MGMT_DNS=\\)\\(.*\\)/\\1\\\"$dnsip\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(SENSOR_HOSTNAME=\\)\\(.*\\)/\\1\\\"sensortest\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(IS_DEBUG=\\)\\(.*\\)/\\1\\\"False\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo sed -i \"s/\\(RUN_PROXY=\\)\\(.*\\)/\\1\\\"false\\\"/g\" /opt/sensor/active/etc/network' >> /var/log/scripts/post-deploy.sh\r\n      echo 'cd /opt/sensor/active/' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo /opt/sensor/active/compose/shutdown.sh' >> /var/log/scripts/post-deploy.sh\r\n      echo 'sudo /opt/sensor/active/compose/startup.sh' >> /var/log/scripts/post-deploy.sh\r\n      echo \"Setup AzCopy..\"\r\n      mkdir -p tmp\r\n      cd tmp\r\n      wget -O azcopy_v10.tar.gz https://azcopyvnext.azureedge.net/release20210920/azcopy_linux_amd64_10.12.2.tar.gz && tar -xf azcopy_v10.tar.gz --strip-components=1\r\n      ./azcopy copy \"$sourceURL\" \"$targetVHDURL\"\r\n      ./azcopy copy \"/var/log/scripts/post-deploy.sh\" \"$targetscriptURL\"\r\n    "
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('custom{0}', uniqueString(resourceGroup().id)))]"
              ]
            }
          ],
          "outputs": {
            "storagename": {
              "type": "string",
              "value": "[format('custom{0}', uniqueString(resourceGroup().id))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "VMdeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'copyvhd')).outputs.storagename.value]"
          },
          "resourceNamePrefix": {
            "value": "SOC-"
          },
          "resourceNameSuffix": {
            "value": "-Play"
          },
          "vmSize": {
            "value": "Standard_D4s_v3"
          },
          "diskSKU": {
            "value": "Standard_LRS"
          },
          "deployPublicIP": {
            "value": "[parameters('deployPublicIP')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.5.6.12127",
              "templateHash": "7270971559560876871"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "adminusername": {
              "type": "string",
              "defaultValue": "Azuresupersu"
            },
            "adminpass": {
              "type": "secureString",
              "defaultValue": "[newGuid()]"
            },
            "storageAccountName": {
              "type": "string"
            },
            "resourceNamePrefix": {
              "type": "string"
            },
            "resourceNameSuffix": {
              "type": "string"
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D4s_v3"
            },
            "diskSKU": {
              "type": "string",
              "defaultValue": "Standard_LRS"
            },
            "deployPublicIP": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "variables": {
            "imagename": "[format('{0}vm{1}{2}-image', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix'))]",
            "pipname": "[format('{0}vm{1}{2}-pip', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix'))]",
            "nsgname": "[format('{0}NSG{1}{2}', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix'))]",
            "nsgidObject": {
              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
            },
            "vmNICname": "[format('{0}vm{1}{2}-nic01', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix'))]",
            "pipProperties": {
              "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipname'))]",
              "properties": {
                "deleteOption": "Delete"
              }
            },
            "vmname": "[format('{0}vm{1}{2}', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/images",
              "apiVersion": "2021-11-01",
              "name": "[variables('imagename')]",
              "location": "[parameters('location')]",
              "properties": {
                "hyperVGeneration": "V1",
                "storageProfile": {
                  "dataDisks": [],
                  "osDisk": {
                    "blobUri": "[format('{0}vhds/testvm.vhd', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').primaryEndpoints.blob)]",
                    "diskSizeGB": 128,
                    "osType": "Linux",
                    "osState": "Generalized",
                    "storageAccountType": "[parameters('diskSKU')]"
                  },
                  "zoneResilient": false
                }
              }
            },
            {
              "condition": "[parameters('deployPublicIP')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2021-05-01",
              "name": "[variables('pipname')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Static"
              },
              "sku": {
                "name": "Standard"
              }
            },
            {
              "condition": "[parameters('deployPublicIP')]",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2021-05-01",
              "name": "[variables('nsgname')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow_443_port",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2021-05-01",
              "name": "[format('{0}vnet{1}{2}', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.10.10.0/24"
                  ]
                },
                "enableDdosProtection": false,
                "subnets": [
                  {
                    "name": "default",
                    "properties": {
                      "addressPrefix": "10.10.10.0/24",
                      "networkSecurityGroup": "[if(parameters('deployPublicIP'), variables('nsgidObject'), json('null'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2021-02-01",
              "name": "[variables('vmNICname')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet{1}{2}', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix')))).subnets[0].id]"
                      },
                      "publicIPAddress": "[if(parameters('deployPublicIP'), variables('pipProperties'), json('null'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipname'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('{0}vnet{1}{2}', parameters('resourceNamePrefix'), uniqueString(resourceGroup().id), parameters('resourceNameSuffix')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2021-03-01",
              "name": "[variables('vmname')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "[parameters('diskSKU')]"
                    },
                    "deleteOption": "Delete"
                  },
                  "imageReference": {
                    "id": "[resourceId('Microsoft.Compute/images', variables('imagename'))]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNICname'))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "Sensor",
                  "adminUsername": "[parameters('adminusername')]",
                  "adminPassword": "[parameters('adminpass')]",
                  "linuxConfiguration": {
                    "patchSettings": {
                      "patchMode": "ImageDefault"
                    }
                  }
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').primaryEndpoints.blob]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/images', variables('imagename'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNICname'))]"
              ]
            }
          ],
          "outputs": {
            "vmname": {
              "type": "string",
              "value": "[variables('vmname')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'copyvhd')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "Post-Deploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmanme": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VMdeployment')).outputs.vmname.value]"
          },
          "storageName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'copyvhd')).outputs.storagename.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.5.6.12127",
              "templateHash": "17460483991552605930"
            }
          },
          "parameters": {
            "vmanme": {
              "type": "string"
            },
            "storageName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vmanme'), 'runCustomScript')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "settings": {
                  "skipDos2Unix": false
                },
                "protectedSettings": {
                  "commandToExecute": "sh post-deploy.sh",
                  "storageAccountName": "[parameters('storageName')]",
                  "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2021-08-01').keys[0].value]",
                  "fileUris": [
                    "[format('{0}scripts/post-deploy.sh', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2021-08-01').primaryEndpoints.blob)]"
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'copyvhd')]",
        "[resourceId('Microsoft.Resources/deployments', 'VMdeployment')]"
      ]
    }
  ]
}
